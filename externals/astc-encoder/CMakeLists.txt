cmake_minimum_required(VERSION 3.22)

message(STATUS "----------------------------------------------------------------")
message(STATUS "astc-encoder")
message(STATUS "----------------------------------------------------------------")

try_run(avx2_runs avx2_compiles ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/testAvx2.c)
message(STATUS "avx2_compiles: ${avx2_compiles}")
message(STATUS "avx2_runs: ${avx2_runs}")
if(avx2_compiles AND NOT (avx2_runs STREQUAL "FAILED_TO_RUN"))
	set(use_avx2 ON)
	set(use_sse2 OFF)
else()
	set(use_avx2 OFF)
	set(use_sse2 ON)
endif()

option(ISA_AVX2 "Enable builds for AVX2 SIMD" ${use_avx2})
option(ISA_SSE41 "Enable builds for SSE4.1 SIMD" OFF)
option(ISA_SSE2 "Enable builds for SSE2 SIMD" ${use_sse2})
option(ISA_NEON "Enable builds for NEON SIMD" OFF)
option(ISA_NONE "Enable builds for no SIMD" OFF)
option(ISA_NATIVE "Enable builds for native SIMD" OFF)
option(DECOMPRESSOR "Enable builds for decompression only" OFF)
option(DIAGNOSTICS "Enable builds for diagnostic trace" OFF)
option(UNITTEST "Enable builds for unit tests" OFF)
option(CLI "Enable build of CLI" OFF)

add_subdirectory(astc-encoder)

if(use_avx2)
	add_library(astcenc ALIAS astcenc-avx2-static)
else()
	add_library(astcenc ALIAS astcenc-sse2-static)
endif()
